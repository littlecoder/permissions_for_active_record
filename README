PermissionsForActiveRecord
==========================

This plugin adds a simple permission system to specified ActiveRecords. This plugin is based on technoweenie's restful-authentication.

This plugin is inspired by hobo's permission system.

The method "current_user" generated be restful-authentication is passed to the ActiveRecord an can be used to determine id a ActiveRecord can be created, udpated, viewed or destroyed.


Setup
=====

You have to install restful-authentication first.
Add this line after the setup of restful-authentication:

before_filter :pass_current_user

This line will propagate the current_user as acting_user in all ActiveRecords, where the permission system is activated.


To use the permission system add the following line to an ActiveRecord:

add_permissions

Now you can implement the methods
creatable?, updateable?, viewable? and destroyable? in the ActiveRecord. If you return false the active_record cannot created, updated, viewed or destroyed. Corresponding before_filters will be called.

Note: viewable? is not used yet.


Example
=======

Let's say the ActiveRecord User is used for restful-authentication and stores all user data.
We want Posts only to be updated and destroyed by their owner and to be created only by a logged-in user:

class Post < ActiveRecord::Base

  belongs_to :owner, :class_name => 'User'

  has_permissions

  def creatable?
    acting_user != :false
  end

  def editable?
	acting_user != :false and acting_user.id == owner.id
  end

  def destroyable?
	acting_user != :false and acting_user.id == owner.id
  end

end


Tests
=====

The SQLite3-Adapter is required for tests.


Copyright (c) 2009 [Malte BÃ¼chmann], released under the MIT license
